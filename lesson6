<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>TSPython</title>
	<link rel="stylesheet" type="text/css" href="style.css">
  <script src="script.js"></script>
</head>
<body>
 	<div class="banner">
	  <a class="banner-title" href = "/">TSPython</a>
	  <div class="banner-links">
	    <a class="banner-link" href="lesson1">Introduction</a>
	    <a class="banner-link" href="lesson2">Conditionals</a>
	    <a class="banner-link" href="lesson3">Loops</a>
	    <a class="banner-link" href="lesson4">Lists</a>
	    <a class="banner-link" href="lesson5">Functions</a>
      <a class="banner-link" style = "color: #5CE1E6" href="lesson6">Dictionaries</a>
      <a class="banner-link" href="lesson7">Objects</a>
      <a class="banner-link" href="lesson8">Decorators</a>
      <a class="banner-link" href="lesson9">Generators</a>
      <a class="banner-link" href="lesson10">Files</a>
      <a class="banner-link" href="other">Other</a>
	  </div>
	</div>
	<iframe src="https://docs.google.com/presentation/d/e/2PACX-1vSWOSLpA-cMNfcNVJkF6i5kIFCGTlx03VOxZc9lWuKoU0Dvw9QGRFluMXqUqfb05ZJW37EEb82NvYuG/embed?start=false&loop=true&delayms=3000" frameborder="0" height="500"></iframe>

	<iframe src="text.html" height="501" style ="margin-top:0px"></iframe>

	<div class="code-container">
<code>#1. Write a function that accepts a list and returns a dictionary whose keys are the list’s numbers and whose values are the respective numbers’ squares. 
def dictOfSquares(list):
  squaresDict = {}
  for num in list:
    squaresDict[num] = num ** 2
  return squaresDict

myDict = dictOfSquares([1, 2, 3, 4, 5])
print(myDict)

#2.  Write a function that returns the sum of all the values in a dictionary.
def sumOfValues(dict):
  sum = 0
  for key in dict:
    sum += dict[key]
  return sum

sum = sumOfValues({'data1':5, 'data2':3, 'data3':10})
print(sum)

#3. Write a function that returns the sum of all the values in a dictionary using values().
def sumOfValues(dict):
  sum = 0
  for num in dict.values():
    sum += num
  return sum

sum = sumOfValues({'data1':5, 'data2':3, 'data3':10})
print(sum)

#4. Write a function that accepts a string and returns a dictionary whose keys are the letters in the string and whose values are the amount of times each letter appears in the string.
def countLetters(string):
  string = string.lower()
  letterDict = {}
  for letter in string:
    if letter in letterDict:
      letterDict[letter] += 1
    else:
      letterDict[letter] = 1
  return letterDict

print(countLetters('Hello World!'))

#5. Given a dictionary of student scores, write a function that returns a dictionary that contains the students’ names as keys and their grades as values
scorebook = {
  "Harry": 81,
  "Ron": 78,
  "Hermione": 99, 
  "Draco": 62,
  "Neville": 57,
}

def convertScores(scorebook):
  gradebook = {}
  for student in scorebook:
    score = scorebook[student]
    if score >= 90:
      grade = "A"
    elif score >= 80:
      grade = "B"
    elif score >= 70:
      grade = "C"
    elif score >= 60:
      grade = "D"
    else:
      grade = "F"
    gradebook[student] = grade
  return gradebook

gradebook = convertScores(scorebook)
print(gradebook)

#6. Write a function that will work with the following line of code on line 21 to add the entry for Russia to the travel_log
  #travel_log = [ {
  #"country": "France",
  #"visits": 12,
  #"cities": ["Paris", "Lille", "Dijon"] } ]
  #add_new_country("Russia", 2, ["Moscow", "Saint Petersburg"])
travelLog = [ {
  "country": "France",
  "visits": 12,
  "cities": ["Paris", "Lille", "Dijon"] } ]
def addCountry(country, visits, cities):
  countryDict = {}
  countryDict["country"] = country
  countryDict["visits"] = visits
  countryDict["cities"] = cities
  travelLog.append(countryDict)
  
addCountry("Russia", 2, ["Moscow", "Saint Petersburg"])
print(travelLog)

#6 with inputs
travel_log = [ {
  "country": "France",
  "visits": 12,
  "cities": ["Paris", "Lille", "Dijon"] } ]

def add_new_country(country, visits, cities):
  countryDict = {}
  countryDict["country"] = country
  countryDict["visits"] = visits
  countryDict["cities"] = cities
  travel_log.append(countryDict)

country = input("Input country: ")
visits = int(input("Input visits: "))
cities = input("Input cities: ").split(",")

add_new_country(country, visits, cities)
print(travel_log)

#7. Write a function that displays each country in the log of the previous program in the following format:
	#You've visited Russia 2 times.
  #You've been to Moscow and Saint Petersburg.
def displayLog():
  for entry in travelLog:
    country = entry["country"]
    visits = entry["visits"]
    cities = entry["cities"]
    print(f"You've visited {country} {visits} times.")
    print(f"You've been to {' and '.join(cities)}.")
displayLog()

#8. Write a function that quizzes the user, tracking their score and printing it at the end.
questions = [
{"question":"What is 1+1?", "answer":"2"}, {"question":"What color is the sky?", "answer":"blue"}, {"question":"What does 'www' stand for in a website browser?", "answer":"world wide web"}
]

def quiz(questions):
  score = 0
  for QAndA in questions:
    guess = input(QAndA["question"])
    if guess.lower() == QAndA["answer"]:
      score += 1
      print("That is correct!")
    else:
      print("That is incorrect.")
  total = len(questions)
  print(f"You got {score}/{total} correct!")

quiz(questions)

#9. Write a program that will collect the names and bids of different people. The program should ask for each bidder's name and their bid individually. If there are other bidders, the screen should clear, so you can pass your phone to the next person. If there are no more bidders, then the program should display the name of the winner and their winning bid.
from replit import clear

bids = {}
stillBidding = True

def getWinner(bids):
  highestBidder = list(bids.keys())[0]
  for bidder in bids:
    if bids[bidder] > bids[highestBidder]:
      highestBidder = bidder
  return highestBidder
  
while stillBidding:
  name = input("What is your name? ")
  bid = int(input("How much will you bid? "))
  bids[name] = bid
  other_bidders = input("Are there any other bidders? Type 'yes' or 'no'")
  clear()
  if other_bidders == "no":
    stillBidding = False

winner = getWinner(bids)
print(f"The winner is {winner} with a bid of ${bids[winner]}!")
</code>
	</div>
</body>
</html>